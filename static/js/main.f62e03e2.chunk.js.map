{"version":3,"sources":["components/header/header.js","components/detail/detail.js","components/pokemon-list/pokemonList.js","components/pagination/pagination.js","components/pokedex/pokedex.js","components/app/app.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","toolbar","backgroundColor","title","Header","classes","React","useState","isSpanish","setState","t","useTranslation","className","AppBar","position","Toolbar","Typography","variant","Switch","checked","onChange","event","i18next","changeLanguage","name","inputProps","padding","buttonDiv","textAlign","button","color","header","image","height","textTransform","text","fontWeight","fontSize","marginBottom","progressDiv","DetailModal","props","handleClose","target","value","Dialog","open","onClose","aria-labelledby","aria-describedby","Grid","container","item","xs","IconButton","onClick","src","data","sprites","other","front_default","alt","gutterBottom","component","id","abilities","types","map","type","weight","skill","ability","stats","stat","base_stat","LinearProgress","table","marginTop","width","PokemonList","pokemon","setOpen","selectedPokemon","setselectedPokemon","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","key","scope","Pagination","gotoNextPage","gotoPrevPage","disabled","Pokedex","setPokemon","currentPageUrl","setCurrentPageUrl","nextPageUrl","setNextPageUrl","prevPageUrl","setPrevPageUrl","loading","setLoading","useEffect","cancel","axios","get","cancelToken","CancelToken","c","then","res","next","previous","results","p","url","App","Boolean","window","location","hostname","match","init","interpolation","escapeValue","lng","resources","en","common","common_en","es","common_es","ReactDOM","render","StrictMode","I18nextProvider","i18n","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f62e03e2.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useTranslation } from \"react-i18next\";\nimport i18next from \"i18next\";\nimport Switch from \"@material-ui/core/Switch\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  toolbar: {\n    backgroundColor: \"#CC0000\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n  const [isSpanish, setState] = React.useState(true);\n  const { t } = useTranslation(\"common\");\n\n  const handleChange = (event) => {\n    setState(!isSpanish);\n    if (isSpanish) {\n      i18next.changeLanguage(\"es\");\n    } else {\n      i18next.changeLanguage(\"en\");\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar className={classes.toolbar}>\n          <Typography variant=\"h6\" className={classes.title}>\n            {t(\"layout.title\")}\n          </Typography>\n          <Switch\n            checked={isSpanish}\n            onChange={handleChange}\n            name=\"checkedA\"\n            inputProps={{ \"aria-label\": \"primary checkbox\" }}\n          />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport { useTranslation } from \"react-i18next\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\n\nconst useStyles = makeStyles({\n  root: {\n    padding: \"10px 20px 30px 20px\",\n  },\n  buttonDiv: {\n    textAlign: \"right\",\n  },\n  button: {\n    color: \"red\",\n    padding: 0,\n  },\n  header: {\n    textAlign: \"center\",\n  },\n  image: {\n    height: 300,\n  },\n  title: {\n    textTransform: \"capitalize\",\n  },\n  text: {\n    fontWeight: \"bold\",\n    color: \"gray\",\n    fontSize: \"16px\",\n    marginBottom: 5,\n  },\n  progressDiv: {\n    marginBottom: \"5px\",\n  },\n});\n\nexport default function DetailModal(props) {\n  const classes = useStyles();\n  const { t } = useTranslation(\"common\");\n\n  function handleClose(event) {\n    props.onChange(event.target.value);\n  }\n\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <Grid container className={classes.root}>\n          <Grid item xs={12} className={classes.buttonDiv}>\n            <IconButton\n              color=\"primary\"\n              className={classes.button}\n              onClick={handleClose}\n            >\n              <CancelIcon />\n            </IconButton>\n          </Grid>\n          <Grid item xs={12} className={classes.header}>\n            <img\n              className={classes.image}\n              src={\n                props.data.sprites\n                  ? props.data.sprites.other[\"official-artwork\"].front_default\n                  : null\n              }\n              alt=\"\"\n            />\n            <Typography\n              gutterBottom\n              variant=\"h4\"\n              component=\"h2\"\n              className={classes.title}\n            >\n              {props.data.name}\n            </Typography>\n          </Grid>\n          <Grid item xs={6}>\n            <Typography variant=\"h6\" className={classes.text} component=\"p\">\n              ID: {props.data.id}\n            </Typography>\n            <Typography variant=\"h6\" className={classes.text} component=\"p\">\n              {t(\"modal.type\")}:{\" \"}\n              {props.data.abilities\n                ? props.data.types.map((type) => type.type.name + \" \")\n                : null}\n            </Typography>\n            <Typography variant=\"h6\" className={classes.text} component=\"p\">\n              {t(\"modal.weight\")}: {props.data.weight / 10} Kg\n            </Typography>\n            <Typography variant=\"h6\" className={classes.text} component=\"p\">\n              {t(\"modal.height\")}: {props.data.height / 10} m\n            </Typography>\n            <Typography variant=\"h6\" className={classes.text} component=\"p\">\n              {t(\"modal.skills\")}:{\" \"}\n              {props.data.abilities\n                ? props.data.abilities.map((skill) => skill.ability.name + \" \")\n                : null}\n            </Typography>\n          </Grid>\n          <Grid item xs={6}>\n            <Typography variant=\"body\" color=\"textSecondary\" component=\"p\">\n              {props.data.stats\n                ? props.data.stats.map((stat) => (\n                    <div className={classes.progressDiv}>\n                      <Typography\n                        variant=\"body\"\n                        color=\"textSecondary\"\n                        component=\"p\"\n                        className={classes.title}\n                      >\n                        {stat.stat.name}: {stat.base_stat}\n                      </Typography>\n                      <LinearProgress\n                        variant=\"determinate\"\n                        value={stat.base_stat}\n                      />\n                    </div>\n                  ))\n                : null}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { useTranslation } from \"react-i18next\";\nimport DetailModal from \"../detail/detail\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    textAlign: \"-webkit-center\",\n  },\n  table: {\n    marginTop: \"30px\",\n    width: \"50%\",\n  },\n  name: {\n    textTransform: \"capitalize\",\n  },\n}));\n\nexport default function PokemonList({ pokemon }) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [selectedPokemon, setselectedPokemon] = React.useState(false);\n  const { t } = useTranslation(\"common\");\n\n  const handleOpen = (data) => {\n    setselectedPokemon(data);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>ID</TableCell>\n            <TableCell align=\"center\">{t(\"table.name\")}</TableCell>\n            <TableCell align=\"center\">{t(\"table.type\")}</TableCell>\n            <TableCell align=\"center\">{t(\"table.weight\")}</TableCell>\n            <TableCell align=\"center\">{t(\"table.preview\")}</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {pokemon.map((pokemon) => (\n            <TableRow key={pokemon.name} onClick={() => handleOpen(pokemon)}>\n              <TableCell component=\"th\" scope=\"row\">\n                {pokemon.id}\n              </TableCell>\n              <TableCell className={classes.name} align=\"center\">\n                {pokemon.name}\n              </TableCell>\n              <TableCell className={classes.name} align=\"center\">\n                {pokemon.types.map((type) => type.type.name + \" \")}\n              </TableCell>\n              <TableCell align=\"center\">{pokemon.weight / 10} Kg</TableCell>\n              <TableCell align=\"center\">\n                <img src={pokemon.sprites.front_default} alt=\"\"></img>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <DetailModal open={open} onChange={handleClose} data={selectedPokemon} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nexport default function Pagination({ gotoNextPage, gotoPrevPage }) {\n  return (\n    <div>\n      <IconButton disabled={!gotoPrevPage} onClick={gotoPrevPage}>\n        <NavigateBeforeIcon />\n      </IconButton>\n      <IconButton disabled={!gotoNextPage} onClick={gotoNextPage}>\n        <NavigateNextIcon />\n      </IconButton>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport PokemonList from \"../pokemon-list/pokemonList\";\nimport axios from \"axios\";\nimport Pagination from \"../pagination/pagination\";\n\nfunction Pokedex() {\n  const [pokemon, setPokemon] = useState([]);\n  const [currentPageUrl, setCurrentPageUrl] = useState(\n    \"https://pokeapi.co/api/v2/pokemon?limit=5\"\n  );\n  const [nextPageUrl, setNextPageUrl] = useState();\n  const [prevPageUrl, setPrevPageUrl] = useState();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n    let cancel;\n    axios\n      .get(currentPageUrl, {\n        cancelToken: new axios.CancelToken((c) => (cancel = c)),\n      })\n      .then((res) => {\n        setLoading(false);\n        setNextPageUrl(res.data.next);\n        setPrevPageUrl(res.data.previous);\n        res.data.results.map((p) => {\n          axios\n            .get(p.url, {\n              cancelToken: new axios.CancelToken((c) => (cancel = c)),\n            })\n            .then((res) => {\n              setPokemon((pokemon) => [...pokemon, res.data]);\n            });\n          return [];\n        });\n      });\n\n    return () => cancel();\n  }, [currentPageUrl]);\n\n  function gotoNextPage() {\n    setPokemon([]);\n    setCurrentPageUrl(nextPageUrl);\n  }\n\n  function gotoPrevPage() {\n    setPokemon([]);\n    setCurrentPageUrl(prevPageUrl);\n  }\n\n  if (loading) return \"Loading...\";\n  return (\n    <>\n      <PokemonList pokemon={pokemon} />\n      <Pagination\n        gotoNextPage={nextPageUrl ? gotoNextPage : null}\n        gotoPrevPage={prevPageUrl ? gotoPrevPage : null}\n      />\n    </>\n  );\n}\n\nexport default Pokedex;\n","import React from \"react\";\nimport \"./app.scss\";\nimport Header from \"../header/header\";\nimport Pokedex from \"../pokedex/pokedex\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <Pokedex></Pokedex>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./components/app/app\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { I18nextProvider } from \"react-i18next\";\nimport i18next from \"i18next\";\nimport common_en from \"./translations/en/common.json\";\nimport common_es from \"./translations/es/common.json\";\n\ni18next.init({\n  interpolation: { escapeValue: false },\n  lng: \"es\",\n  resources: {\n    en: {\n      common: common_en,\n    },\n    es: {\n      common: common_es,\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <I18nextProvider i18n={i18next}>\n      <App />\n    </I18nextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}